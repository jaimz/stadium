// Generated by LiveScript 1.2.0
(function(){
  var _, delegate, WithDelegation, slice$ = [].slice;
  _ = require('prelude-ls');
  delegate = function(delegates, fnName){
    var params, i$, len$, d, results$ = [];
    delegates == null && (delegates = []);
    fnName == null && (fnName = 'delegate');
    params = slice$.call(arguments, 2);
    if (!(delegates && fnName)) {
      return;
    }
    for (i$ = 0, len$ = delegates.length; i$ < len$; ++i$) {
      d = delegates[i$];
      if (_.isType('Function', d[fnName])) {
        results$.push(d[fnName].apply(d, params));
      }
    }
    return results$;
  };
  WithDelegation = {
    addDelegate: function(d){
      if (this.delegates == null) {
        this.delegates = [];
      }
      if (_.isType('Object', d)) {
        return this.delegates.push(d);
      }
    },
    removeDelegate: function(d){
      var i;
      i = this.delegates.indexOf(d);
      if (i !== -1) {
        return this.delegates.splice(i, 1);
      }
    },
    callDelegate: function(fnName){
      var params;
      fnName == null && (fnName = 'delegate');
      params = slice$.call(arguments, 1);
      if (this.delegates != null && this.delegates.length > 0) {
        return delegate.apply(null, [this.delegates, fnName].concat(slice$.call(params)));
      }
    }
  };
  module.exports = {
    WithDelegation: WithDelegation
  };
}).call(this);
