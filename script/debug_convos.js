// Generated by LiveScript 1.2.0
(function(){
  var person, conversation, __names, kNumRecents, kNumFavourites, HubRepository;
  person = require('./person.js');
  conversation = require('./conversation.js');
  __names = ["Tatiana Toboeva", "Adrian O'Grady", "Misha Kalestki", "Rania Leliou", "Felicity Herst", "Warren Keyes", "James Ford", "Duncan Scott", "Catherine Vilhauer", "Ed Goward", "Richard Thorne", "Simon Hamilton", "Todd Roshak", "Eva Czekalska", "Gee Plumb", "Phillip Hounslow", "Ahmed Zaman", "Derek Lakin"];
  kNumRecents = 5;
  kNumFavourites = 7;
  HubRepository = (function(){
    HubRepository.displayName = 'HubRepository';
    var prototype = HubRepository.prototype, constructor = HubRepository;
    function HubRepository(){
      var res$, i$, ref$, len$, n, withAv, to$, i, pIdx, convo, p;
      this.RandomContact = bind$(this, 'RandomContact', prototype);
      this.CreateConvo = bind$(this, 'CreateConvo', prototype);
      this.FindConvo = bind$(this, 'FindConvo', prototype);
      this.FindPerson = bind$(this, 'FindPerson', prototype);
      this.Contacts = [];
      this.Recents = [];
      this.Favourites = [];
      this._convoMap = {};
      res$ = [];
      for (i$ = 0, len$ = (ref$ = __names).length; i$ < len$; ++i$) {
        n = ref$[i$];
        res$.push(new person.Person(n));
      }
      this._people = res$;
      withAv = new person.Person("James O'Brien");
      withAv.avatar = "./img/avatar.jpeg";
      this._people.unshift(withAv);
      for (i$ = 1, to$ = kNumRecents; i$ <= to$; ++i$) {
        i = i$;
        pIdx = Math.floor(Math.random(kNumRecents) * kNumRecents);
        convo = this.CreateConvo(this._people[pIdx]);
        this.Recents.push(convo);
      }
      for (i$ = 0, len$ = (ref$ = (fn$())).length; i$ < len$; ++i$) {
        i = ref$[i$];
        pIdx = Math.floor(Math.random(kNumRecents) * kNumRecents);
        convo = this.CreateConvo(this._people[pIdx]);
        this.Favourites.push(convo);
      }
      res$ = [];
      for (i$ = 0, len$ = (ref$ = this._people).length; i$ < len$; ++i$) {
        p = ref$[i$];
        res$.push(this.CreateConvo(p));
      }
      this.Contacts = res$;
      function fn$(){
        var i$, to$, results$ = [];
        for (i$ = 0, to$ = kNumFavourites; i$ < to$; ++i$) {
          results$.push(i$);
        }
        return results$;
      }
    }
    prototype.FindPerson = function(id){
      return _.find(function(c){
        return c.identity === id;
      }, this.Contacts);
    };
    prototype.FindConvo = function(id){
      return this._convoMap[id] || null;
    };
    prototype.CreateConvo = function(person){
      var convo;
      person == null && (person = null);
      convo = new conversation.Conversation();
      this._convoMap[convo.identity] = convo;
      if (person != null) {
        convo.addParticipant(person);
      }
      return convo;
    };
    prototype.RandomContact = function(){
      var l, r, i;
      l = this._people.length;
      r = Math.random();
      i = Math.floor(l * r);
      return this._people[i];
    };
    return HubRepository;
  }());
  module.exports = {
    Repository: HubRepository
  };
  function bind$(obj, key, target){
    return function(){ return (target || obj)[key].apply(obj, arguments) };
  }
}).call(this);
